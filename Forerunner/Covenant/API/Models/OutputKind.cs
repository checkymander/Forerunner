// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Covenant.API.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OutputKind.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OutputKind
    {
        [EnumMember(Value = "ConsoleApplication")]
        ConsoleApplication,
        [EnumMember(Value = "WindowsApplication")]
        WindowsApplication,
        [EnumMember(Value = "DynamicallyLinkedLibrary")]
        DynamicallyLinkedLibrary,
        [EnumMember(Value = "NetModule")]
        NetModule,
        [EnumMember(Value = "WindowsRuntimeMetadata")]
        WindowsRuntimeMetadata,
        [EnumMember(Value = "WindowsRuntimeApplication")]
        WindowsRuntimeApplication
    }
    internal static class OutputKindEnumExtension
    {
        internal static string ToSerializedValue(this OutputKind? value)
        {
            return value == null ? null : ((OutputKind)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OutputKind value)
        {
            switch( value )
            {
                case OutputKind.ConsoleApplication:
                    return "ConsoleApplication";
                case OutputKind.WindowsApplication:
                    return "WindowsApplication";
                case OutputKind.DynamicallyLinkedLibrary:
                    return "DynamicallyLinkedLibrary";
                case OutputKind.NetModule:
                    return "NetModule";
                case OutputKind.WindowsRuntimeMetadata:
                    return "WindowsRuntimeMetadata";
                case OutputKind.WindowsRuntimeApplication:
                    return "WindowsRuntimeApplication";
            }
            return null;
        }

        internal static OutputKind? ParseOutputKind(this string value)
        {
            switch( value )
            {
                case "ConsoleApplication":
                    return OutputKind.ConsoleApplication;
                case "WindowsApplication":
                    return OutputKind.WindowsApplication;
                case "DynamicallyLinkedLibrary":
                    return OutputKind.DynamicallyLinkedLibrary;
                case "NetModule":
                    return OutputKind.NetModule;
                case "WindowsRuntimeMetadata":
                    return OutputKind.WindowsRuntimeMetadata;
                case "WindowsRuntimeApplication":
                    return OutputKind.WindowsRuntimeApplication;
            }
            return null;
        }
    }
}
